:::{.callout-tip collapse="true" icon=false}
## Modélisation d'un projet sous forme de *pipeline* de données

:::{.incremental}
0. Installer le package `targets`.
1. Créer un fichier `_targets.R` à la racine du dépôt, dans la documentation.
2. Ajouter `_targets/` dans le .gitignore.
3. Commençons par les dépendances. Reporter les `library` dans le fichier `R/functions.R` et
récupérer les noms des packages pour les mettre dans la section `tar_option_set()`.
4. Créer dans `R/functions.R` une fonction `read_yaml_secret` qui prend en arguments le chemin du
fichier et la clé associée au secret, et renvoie le jeton de l'API.
5. Créer dans `R/functions.R` une fonction `read_from_parquet` qui prend en argument
le chemin du fichier et renvoie notre dataframe de départ.
:::

:::

## Exercice 6

:::{.callout-tip collapse="true" icon=false}
## Modélisation d'un projet sous forme de *pipeline* de données (suite)

:::{.incremental}

6. A partir du modèle dans la documentation de `targets`, créer les quatres premières
cibles (_targets_): respectivement, les deux fichiers (utiliser l'argument `format = 'file'`) et les deux
objets `R` construits à partir des fonctions  `read_yaml_secret` et `read_from_parquet`.
Pour cette dernière, utiliser le `format = 'parquet'`.
7. Visualiser les relations entre objets de notre _pipeline_ à partir de `tar_visnetwork()`.
8. Exécuter `tar_make()` dans la console et observer le changement d'état avec `tar_visnetwork()`.
:::

:::
